#!/bin/bash -e

VERSION=1.0

usage(){
cat <<EOF
Usage:
download_EMBL (TAXONOMIC_DIVISIONS)
download a fresh copy of the entire EMBL nucleotide database

"Each sequence is only assigned to one taxonomic division (otherwise the sequence would be duplicated in different parts of the database).
However, as you can see from the list above, some taxonomic divisions overlap.
Therefore, sequences are classified according to the most specific division.
For example, a mouse sequence could belong to MUS, ROD, MAM or VRT divisions, but it is classified as MUS as this is the most specific category (lowest taxonomic node).
Once a sequence is placed in the most specific taxonomic division, it is then excluded from all remaining taxonomic divisions so as not to duplicate data.
For example, the mouse sequence is found in the MUS divisions, therefore it is excluded from the ROD, MAM and VRT divisions, even though a rat is a mammal and a vertebrate"
(https://www.ebi.ac.uk/training/online/course/nucleotide-sequence-data-resources-ebi/what-ena/how-data-structured)

taxonomic divisions that can be specified in any combination include:
   HUM : human
   FUN : fungi
   VRL : viral
   MUS : mouse
   INV : invertebrate
   ENV : environmental
   ROD : rodent
   PLN : plant
   SYN : synthetic
   MAM : mammal
   PRO : prokaryote
   TGN : transgenic
   VRT : vertebrate
   PHG : phage
   UNC : unclassified
-V   show script version
-h   show this help
EOF
exit 0; }

SCR=`basename $0`;
# rel dir
# DIR=`dirname $(readlink $0 || echo $0)`;
# abs dir
# # get absolute dir
pushd . > /dev/null
DIR="${BASH_SOURCE[0]}"
while [ -h "$DIR" ]; do
cd "$(dirname "$DIR")"
DIR="$(readlink "$(basename "$DIR")")"
done
cd "$(dirname "$DIR")"
DIR="$(pwd)/"
popd > /dev/null

UDIR=$DIR/../util/
LDIR=$DIR/../lib/

log(){
echo [$(date +"%T")] $@ >&2
}
logs(){
echo -n [$(date +"%T")] $@ >&2
}
loge(){
echo " "$@ >&2
}

check_bin(){
logs $1 ..
if [[ $1 == */* ]]; then
[ -x $1 ] || { loge failed; log "$1 not found or executable"; exit 1; }
else
hash $1 || { loge failed; log "$1 required in PATH"; exit 1; }
fi;
loge ok
}

# Execute getopt and check opts/args
ARGS=`getopt -n "$SCR" -o "hV" -- "$@"`
[ $? -ne 0 ] && exit 1; # Bad arguments
eval set -- "$ARGS"

while true; do
case "$1" in
-h) usage && exit 0;;
-V) echo $VERSION && exit 0;;
--) shift; break;;
esac
done;

#check input
for i in $@
do
[[ "$i" =~ ^(HUM|FUN|VRL|MUS|INV|ENV|ROD|PLN|SYN|MAM|PRO|TGN|VRT|PHG|UNC)$ ]] || { echo "The taxonomic divison $i is not an available option" ; exit 1 ; }
done

# check binaries
PATH=$UDIR/mafft/bin:$UDIR/tcoffee/compile:$UDIR/standard-RAxML:$UDIR/anaconda_ete/bin:$UDIR/OBITools/bin:$PATH;
for bin in obiconvert gunzip; do
    check_bin $bin;
done;


mkdir -p embl_last
cd embl_last

#Download EMBL
mkdir -p EMBL
cd EMBL

if [ $# -eq 0 ]
  then
    wget -nH --cut-dirs=5 -A rel_std_\*.dat.gz -m ftp://ftp.ebi.ac.uk/pub/databases/embl/release/std/
  else
    for i in $@
    do
      wget -nH --cut-dirs=5 -A rel_std_${i,,}\*.dat.gz -m ftp://ftp.ebi.ac.uk/pub/databases/embl/release/std/
    done
  fi

echo "unzipping files..."
gunzip *.dat.gz
cd ..


#Download the taxonomy
mkdir -p TAXO
cd TAXO
wget ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz
tar -zxvf taxdump.tar.gz
cd ..


#Format the data
obiconvert --skip-on-error --embl -t ./TAXO --ecopcrdb-output=embl_last ./EMBL/*.dat
